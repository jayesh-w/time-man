!function(){return function t(e,i,s){function o(r,a){if(!i[r]){if(!e[r]){var u="function"==typeof require&&require;if(!a&&u)return u(r,!0);if(n)return n(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=i[r]={exports:{}};e[r][0].call(m.exports,function(t){return o(e[r][1][t]||t)},m,m.exports,t,e,i,s)}return i[r].exports}for(var n="function"==typeof require&&require,r=0;r<s.length;r++)o(s[r]);return o}}()({1:[function(t,e,i){"use strict";if(e.exports=t("./src/time-man-core.js"),"undefined"!=typeof window){const e=t("./src/time-man-core.js");window.Time=e}},{"./src/time-man-core.js":7}],2:[function(t,e,i){const s=t("./utils/convert.js"),o=t("./utils/deconvert.js");e.exports=((t,e)=>{let i=s(t,"H:i"),n=s(e,"H:i");for(sum=i+n;sum>=1440;)sum-=1440;return o(sum,"H:i")})},{"./utils/convert.js":8,"./utils/deconvert.js":9}],3:[function(t,e,i){const s=t("./utils/convert.js"),o=t("./utils/deconvert.js");e.exports=((t,e)=>{let i=s(t,"H:i:s"),n=s(e,"H:i:s");for(sum=i+n;sum>=86400;)sum-=86400;return o(sum,"H:i:s")})},{"./utils/convert.js":8,"./utils/deconvert.js":9}],4:[function(t,e,i){const s=t("./utils/getFormat.js"),o=t("./utils/isTime.js"),n=t("./utils/convert.js"),r=t("./utils/deconvert");e.exports=(t=>{let e=0,i=0;for(var a of t)format=s(a),"H:i"==format&&(a+=":00"),o(a,"H:i:s")?e=n(a,"H:i:s")+e:i++;const u=Math.floor(e/(t.length-i));return r(u,"H:i:s")})},{"./utils/convert.js":8,"./utils/deconvert":9,"./utils/getFormat.js":10,"./utils/isTime.js":11}],5:[function(t,e,i){const s=t("./utils/convert.js"),o=t("./utils/deconvert.js");e.exports=((t,e)=>{let i=s(t,"H:i"),n=s(e,"H:i");for(diff=i-n;diff<0;)diff+=1440;return o(diff,"H:i")})},{"./utils/convert.js":8,"./utils/deconvert.js":9}],6:[function(t,e,i){const s=t("./utils/convert.js"),o=t("./utils/deconvert.js");e.exports=((t,e)=>{let i=s(t,"H:i:s"),n=s(e,"H:i:s");for(diff=i-n;diff<0;)diff+=86400;return o(diff,"H:i:s")})},{"./utils/convert.js":8,"./utils/deconvert.js":9}],7:[function(t,e,i){const s=t("./utils/isTime.js"),o=t("./utils/getFormat.js"),n=t("./addTimeSeconds.js"),r=t("./addTimeMinutes.js"),a=t("./subTimeSeconds.js"),u=t("./subTimeMinutes.js"),l=t("./utils/convert.js"),m=t("./utils/deconvert.js"),c=t("./utils/timeZones.js");e.exports=t("./averageTime.js"),e.exports=class{constructor(t,e="H:i:s"){if(this.format=e,t)s(t,e)&&(this.time=t);else{function i(t){return t<10?"0"+t:t}const t=new Date;let e=i(t.getHours()),s=i(t.getMinutes()),o=i(t.getSeconds());this.time=e+":"+s+":"+o}}getFormat(){if(this.format)return this.format}getTime_12Hr(){const t=this.time.split(":");let e="AM",i=t[0];return i>12&&(i-=12,e="PM"),12==i&&(e="PM"),i<10&&(i="0"+i),"H:i:s"==this.format?i+":"+t[1]+":"+t[2]+" "+e:i+":"+t[1]+" "+e}getTime(){return this.time}logTime(){this.time&&console.log(this.time)}getTimeZone(){const t=(new Date).getTimezoneOffset(),e=m(Math.abs(t),"H:i");let i="";for(let e of c)-t/60==e.value&&(i=e.text);if(""==i){let s="";i="GMT/UTC"+(s=t<0?"+":"-")+e+"city not found!"}return i}addTime(t){if("object"==typeof t){const e=t.getFormat();"H:i:s"==e&&(this.time=n(this.time,t.getTime())),"H:i"==e&&(this.time=addTimeMinute(this.time,t.getTime()))}else try{const e=o(t);if(!s(t,e))throw"Invalid Time Provided in argument!";if(e!=this.format)throw"Format Doesn't Match!";"H:i:s"==e&&(this.time=n(this.time,t)),"H:i"==e&&(this.time=r(this.time,t))}catch(t){console.log(t)}}subtractTime(t){if("object"==typeof t){const e=t.getFormat();"H:i:s"==e&&(this.time=a(this.time,t.getTime())),"H:i"==e&&(this.time=subTimeMinute(this.time,t.getTime()))}else try{const e=o(t);if(!s(t,e))throw"Invalid Time Provided in argument!";if(e!=this.format)throw"Format Doesn't Match!";"H:i:s"==e&&(this.time=a(this.time,t)),"H:i"==e&&(this.time=u(this.time,t))}catch(t){console.log(t)}}static averageTime(t){let e=0,i=0;for(let n of t)"H:i"==o(n)&&(n+=":00"),s(n,"H:i:s")?e=l(n,"H:i:s")+e:i++;const n=Math.floor(e/(t.length-i));return m(n,"H:i:s")}static UnixTimeStamp(){return(new Date).getTime()}static CurrentDate(t="/"){function e(t){return t<10?"0"+t:t}const i=new Date;let s=e(i.getDate()),o=e(i.getMonth());return e(i.getFullYear())+t+o+t+s}static TimeStamp(){function t(t){return t<10?"0"+t:t}let e=this.CurrentDate("-");const i=new Date;return e+" "+t(i.getHours())+":"+t(i.getMinutes())+":"+t(i.getSeconds())}static TimeSlice(t,e,i){try{if(s(t,"H:i:s")&&s(e,"H:i:s")&&s(i,"H:i:s")){if("H:i:s"==o(t)&&"H:i:s"==o(e)&&"H:i:s"==o(i)){let s=l(t,"H:i:s"),o=l(e,"H:i:s"),n=l(i,"H:i:s");const r={from:t,to:e,per_slot:i,slot:[]};let a=0;for(;s<=o&&!(s+n>o);){let t={from:m(s,"H:i:s"),to:m(s+n,"H:i:s")};a++,s+=n,r.slot.push(t)}return r.number_of_slots=a,r}throw"One or more arguments doesnt match format(H:i:s)"}throw"One or more Arguments is not a valid Time!"}catch(t){console.log(t)}}static TimeZone(){const t=(new Date).getTimezoneOffset(),e=m(Math.abs(t),"H:i");let i="";for(let e of c)-t/60==e.value&&(i=e.text);if(""==i){let s="";i="GMT/UTC"+(s=t<0?"+":"-")+e+"city not found!"}return i}}},{"./addTimeMinutes.js":2,"./addTimeSeconds.js":3,"./averageTime.js":4,"./subTimeMinutes.js":5,"./subTimeSeconds.js":6,"./utils/convert.js":8,"./utils/deconvert.js":9,"./utils/getFormat.js":10,"./utils/isTime.js":11,"./utils/timeZones.js":12}],8:[function(t,e,i){e.exports=((t,e)=>"H:i"==e?(time_minute=60*parseInt(t.substring(0,2))+parseInt(t.substring(3,5)),time_minute):"H:i:s"==e?(time_second=60*parseInt(t.substring(0,2))*60+60*parseInt(t.substring(3,5))+parseInt(t.substring(6,8)),time_second):void 0)},{}],9:[function(t,e,i){e.exports=((t,e)=>"H:i"==e?(hours=Math.floor(t/60),minutes=t%60,hours<10&&(hours="0"+hours),minutes<10&&(minutes="0"+minutes),hours+":"+minutes):"H:i:s"==e?(hours=Math.floor(t/3600),minutes=Math.floor(t/60)%60,seconds=t%60,hours<10&&(hours="0"+hours),minutes<10&&(minutes="0"+minutes),seconds<10&&(seconds="0"+seconds),hours+":"+minutes+":"+seconds):void 0)},{}],10:[function(t,e,i){const s=t("./isTime.js");e.exports=(t=>{try{if(5!=t.length&&8!=t.length)throw"Check Time Provided!";if(5==t.length){if(s(t,"H:i")&&":"==t[2])return"H:i";throw"Not a valid Time!(valid format : 00:00)"}if(8==t.length){if(s(t,"H:i:s")&&":"==t[2]&&":"==t[5])return"H:i:s";throw"Not a valid Time!(valid format : 00:00:00)"}}catch(t){console.log(t)}})},{"./isTime.js":11}],11:[function(t,e,i){e.exports=((e,i)=>{if(validformat=["H:i:s","H:i"],validformat.includes(i))try{const s=t("./convert.js");if(s(e,i)<1440&&"H:i"==i)return!0;if(s(e,i)<86400&&"H:i:s"==i)return!0;throw"NotTime: The Given String is not a valid Time!(check values)"}catch(t){return console.log(t),!1}else try{throw"FormatError: Not a valid Format!"}catch(t){return console.log(t),!1}})},{"./convert.js":8}],12:[function(t,e,i){e.exports=[{value:-12,text:"(GMT -12:00) Eniwetok, Kwajalein"},{value:-11,text:"(GMT -11:00) Midway Island, Samoa"},{value:-10,text:"(GMT -10:00) Hawaii"},{value:-9,text:"(GMT -09:00) Alaska"},{value:-8,text:"(GMT -08:00) Pacific Time (US & Canada)"},{value:-7,text:"(GMT -07:00) Mountain Time (US & Canada)"},{value:-6,text:"(GMT -06:00) Central Time (US & Canada), Mexico City"},{value:-5,text:"(GMT -05:00) Eastern Time (US & Canada), Bogota, Lima"},{value:-4,text:"(GMT -04:00) Atlantic Time (Canada), Caracas, La Paz"},{value:-3.5,text:"(GMT -03:30) Newfoundland"},{value:-3,text:"(GMT -03:00) Brazil, Buenos Aires, Georgetown"},{value:-2,text:"(GMT -02:00) Mid-Atlantic"},{value:-1,text:"(GMT -01:00) Azores, Cape Verde Islands"},{value:0,text:"(GMT) Western Europe Time, London, Lisbon, Casablanca"},{value:1,text:"(GMT +01:00) Brussels, Copenhagen, Madrid, Paris"},{value:2,text:"(GMT +02:00) Kaliningrad, South Africa"},{value:3,text:"(GMT +03:00) Baghdad, Riyadh, Moscow, St. Petersburg"},{value:3.5,text:"(GMT +03:30) Tehran"},{value:4,text:"(GMT +04:00) Abu Dhabi, Muscat, Baku, Tbilisi"},{value:4.5,text:"(GMT +04:30) Kabul"},{value:5,text:"(GMT +05:00) Ekaterinburg, Islamabad, Karachi, Tashkent"},{value:5.5,text:"(GMT +05:30) Mumbai, Kolkata, Chennai, New Delhi"},{value:5.75,text:"(GMT +05:45) Kathmandu"},{value:6,text:"(GMT +06:00) Almaty, Dhaka, Colombo"},{value:7,text:"(GMT +07:00) Bangkok, Hanoi, Jakarta"},{value:8,text:"(GMT +8:00) Beijing, Perth, Singapore, Hong Kong"},{value:9,text:"(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk"},{value:9.5,text:"(GMT +9:30) Adelaide, Darwin"},{value:10,text:"(GMT +10:00) Eastern Australia, Guam, Vladivostok"},{value:11,text:"(GMT +11:00) Magadan, Solomon Islands, New Caledonia"},{value:12,text:"(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka"}]},{}]},{},[1]);
